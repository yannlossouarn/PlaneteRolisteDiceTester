-- Une fois ce code copi√© dans [l'√©diteur du site PlaneteRoliste.com](https://www.planeteroliste.com/SMF/index.php?page=page151)
-- il permet d'utiliser des syntaxes de type ":nouveaujet parametres:" et ":autrejet parametres:"
function rpg.accel.nouveaujet(s)
    local rolls, myheader = rpg.smf.striptitle(s)
    print("nouveautjet:s", s)

    -- Appel √† une fonction du wrapper, qui g√®re l'affichage du r√©sultat du lancer de d√©s.
    return rpg.smf.save(myheader, "Valeur des jets", "R√©sultats", "Pied-de-page du lancer", "classeHtmlUtiliseePourLeBlocNouveauJet")
end

function rpg.accel.autrejet(s)
    local rolls, myheader = rpg.smf.striptitle(s)
    print("autrejet:s", s)

    -- Analyse de la cha√Æne de caract√®res contenant les param√®tres pour les r√©cup√©rer dans des variables
    -- La syntaxe des pattens LUA est proche des expressions r√©guli√®res, mais PAS IDENTIQUE.
    -- La capture est effectu√©e par les blocs entre parenth√®ses.
    -- R√©f√©rez-vous √† https://www.lua.org/manual/5.4/manual.html#6.4.1
    local seuil, competence, difficulte = string.match(s, "^([%d]*)[%s]*([%w]*)[%s]*([%w]*)$")

    -- On peut afficher des traces dans la console
    print("autrejet:seuil", seuil)
    print("autrejet:competence", competence)
    print("autrejet:difficulte", difficulte)

    -- L'appel au wrapper est d√©l√©gu√©, cette fonction ne faisant que traiter les param√®tres pass√©s dans la balise.
    -- C'est la fonction EvaluateAutreJet() qui est en charge d'appeler rpg.smf.save() ensuite 
    return EvaluateAutreJet(seuil, competence, difficulte)
end

function EvaluateAutreJet(seuil, competence, difficulte)
    print("EvaluateAutreJet")
    print("EvaluateAutreJet:seuil", seuil)
    print("EvaluateAutreJet:competence", competence)
    print("EvaluateAutreJet:difficulte", difficulte)

    local syntheseResultat = ""
    local htmlClass = "classeHtmlAutrejet"
     if seuil and competence and difficulte then

        -- Conversion de la cha√Æne de caract√®res "33" en nombre 33
        seuil = tonumber(seuil)

        print("EvaluateAutreJet:", "tous les param√®tres n√©cessaires sont pr√©sents")
        -- Constitution du libell√© affich√© en ent√™te
        local myheader = "Jet de " .. competence .. ", seuil de " .. seuil .. ", difficult√© " .. difficulte
        print("myheader", myheader)
        -- Jet de deux D10
        local jets = rpg.roll.dice(2, 0, 9)
        local d1, d2 = jets[1], jets[2]
        print("jets:", d1, d2)
        local myrolls =
        "[" ..
        'div class="yellow_d10" style="display: inline-table;text-align: center;vertical-align:middle;color: black;height: 24px;background-size: cover;width: 28px;text-shadow: -1px -1px 0px rgba(255, 227, 0, 0.3), 1px 1px 1px rgba(168, 129, 11, 0.8);"]' ..
        d1 .. "[" .. "/div]"
        myrolls =
        myrolls ..
        "[" ..
        'div class="white_d10" style="display: inline-table;text-align: center;vertical-align:middle;color: black;height: 24px;background-size: cover;width: 28px;text-shadow: -1px -1px 0px rgba(255, 227, 0, 0.3), 1px 1px 1px rgba(168, 129, 11, 0.8);"]' ..
            d2 .. "[" .. "/div]"
        -- print("myrolls:", myrolls)

        local d100 = GetD100(d1, d2)
        print("d100:", d100)

        local resultat = ""
        local footer = ""

        if d100 <= seuil then
            print("Bravo")
            resultat = string.format('[div style="font-size: 1em"] Bravo, un r√©sultat de %d contre un seuil de %d est une r√©ussite !![/div]', d100, seuil)
            footer = '[div style="font-size: 3em"] ü§© [/div]'
        else
            print("Perdu")
            resultat = string.format('[div style="font-size: 1em"] Perdu, un jet de %d constitue un √©chec contre un seuil de %d...[/div]', d100, seuil)
            footer = '[div style="font-size: 1.5em"] üò± [/div]'
        end
        print(myheader, resultat, footer, htmlClass)
        return rpg.smf.save(myheader, myrolls, resultat, footer, htmlClass)
    end
end

function GetD100(d1, d2)
    print("GetD100", d1, d2)
    if d1 == 0 and d2 == 0 then
        return 100
    else
        return d1 * 10 + d2
    end
end