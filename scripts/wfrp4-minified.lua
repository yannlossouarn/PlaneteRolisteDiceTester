a=true b=1 c=97 d=true e=true f=0.5 g=6921 function h(ab,bb)if(ab == bb and true)then return true else return false end end local function Y(ab,bb,cb,db,eb)local function fb(hb,ib,jb,kb,lb)local mb= "["..ib if lb then mb= mb..' id="' .. lb .. '"'end if jb then mb= mb..' class="' .. jb .. '"'end if kb then mb= mb..' style="' .. kb .. '"'end return mb.."]" .. hb .. "[/" .. ib .. "]"end local gb=fb(ab,bb,cb,db,eb)return function(hb,ib,jb,kb)if not hb then return gb else return Y(gb,hb,ib,jb,kb)end end end local function Z(ab,bb,cb,db,eb)local fb={tagName= ab or"",children={},isTextNode=false}local gb=""if cb then gb= gb..' id="' .. cb .. '"'end if db then gb= gb..' class="' .. db .. '"'end if eb then gb= gb..' style="' .. eb .. '"'end fb.tagAttributes=gb function fb.addChild(hb,ib,jb,kb,lb)local mb=Z(hb,ib,jb,kb,lb)table.insert(fb.children,mb)return mb end if bb and ab then fb.addChild(nil,bb)elseif bb and not ab then fb.isTextNode=true fb.text=bb end function fb.build()local hb=""if fb.isTextNode then return fb.text else if fb.tagName~=""then hb= "["..fb.tagName if fb.tagAttributes~=""then hb= hb..fb.tagAttributes end hb= hb.."]"end for ib,jb in ipairs(fb.children)do hb= hb..jb.build()end if fb.tagName~=""then if fb.tagName=="hr"then else hb= hb.."[/" .. fb.tagName .. "]"end end end return hb end return fb end function i(ab,bb)if ab == 0 and bb == 0 then return 100 else return ab * 10+bb end end function j(ab,bb)if(ab <= bb or (a and ab <= b))and not (a and ab >= c)then return true else return false end end function k(ab,bb)if ab >= bb or ab >= c then return true else return false end end function l(ab,bb,cb)if(d and h(bb, cb))or((ab ~= "corps-a-corps" or ab ~= "distance") and a and (i(bb, cb) <= b or i(bb, cb) >= c))then return true else return false end end function m(ab)ab= string.lower(ab)or"I"local bb,cb,db,eb,fb,gb,hb,ib={},60,40,20,0,-10,-20,-30 bb["tf"]=cb bb["f"]=db bb["a"]=eb bb["i"]=fb bb["c"]=gb bb["d"]=hb bb["td"]=ib return bb[ab]end function n(ab)ab=string.lower(ab)local bb,cb,db,eb,fb,gb,hb,ib={},"TF","F","A","I","C","D","TD"bb["tf"]=cb bb["tresfacile"]=cb bb["f"]=db bb["facile"]=db bb["a"]=eb bb["accessible"]=eb bb["i"]=fb bb["intermediaire"]=fb bb["intermédiaire"]=fb bb["c"]=gb bb["complexe"]=gb bb["d"]=hb bb["difficile"]=hb bb["td"]=ib bb["tresdifficile"]=ib return bb[ab]end function o(ab)ab=string.lower(ab)local bb,cb,db,eb,fb,gb,hb,ib={},"Très Facile","Facile","Accessible","Intermédiaire","Complexe","Difficile","Très Difficile"bb["tf"]=cb bb["tresfacile"]=cb bb["f"]=db bb["facile"]=db bb["a"]=eb bb["accessible"]=eb bb["i"]=fb bb["intermediaire"]=fb bb["intermédiaire"]=fb bb["c"]=gb bb["complexe"]=gb bb["d"]=hb bb["difficile"]=hb bb["td"]=ib bb["tresdifficile"]=ib return bb[ab]end function p(ab)ab=string.lower(ab)local bb,cb,db,eb,fb,gb,hb,ib={},"+60","+40","+20","+0","-10","-20","-30"bb["tf"]=cb bb["tresfacile"]=cb bb["f"]=db bb["facile"]=db bb["a"]=eb bb["accessible"]=eb bb["i"]=fb bb["intermediaire"]=fb bb["intermédiaire"]=fb bb["c"]=gb bb["complexe"]=gb bb["d"]=hb bb["difficile"]=hb bb["td"]=ib bb["tresdifficile"]=ib return bb[ab]end function q(ab)ab=tonumber(ab)if ab<=0 then return"+0"elseif ab>0 then return"+"..ab * 10 end end function r(ab,bb)local cb= ab+bb if(cb < 1 and true)then cb=1 end return cb end function s(ab,bb)local cb= (bb - ab)/10 local db=0 if(cb > 0 and true)then db=math.floor(cb)elseif(cb < 0 and true)then db=math.ceil(cb)end db= db+t(bb)return db end function t(ab)ab=tonumber(ab)local bb=0 if e then if(ab > 100 and true)then bb=math.floor((ab - 100)/10)end else bb=0 end return bb end function u(ab,bb,cb,db,eb)local fb=0 local gb= ab-cb local hb=eb['Degats']local ib= string.match(hb, ".*(%+BF)%s*%+%d*")or false local jb= string.match(hb, ".*%s*(%+%d*)")or 0 ib= ib~=nil jb=tonumber(jb)if ib then jb= jb+bb else jb=jb end fb= jb+gb local kb=string.format("%dDR %s",gb,hb)local lb=""print('armeEnMain["inoffensive"]',eb["inoffensive"])if(f < 1 and not eb["inoffensive"]and true)then fb= fb-math.ceil(db * f)lb=string.format(" - (%dBE * %.1f)",db,f)else fb= fb-db lb=string.format(" - %dBE",db)end kb= kb..lb if(fb < 0 and true)then fb=0 end return fb,kb end function v(ab,bb)for cb,db in ipairs(bb)do if ab >= db[1]and ab <= db[2]then return db[3]end end return end function w(ab)print("GetLocalisationDegats:d100:",ab)ab=tonumber(ab)local bb={{1,9,"tete"},{21,41,"brasSecondaire"},{25,44,"brasPrincipal"},{45,79,"corps"},{80,89,"jambeGauche"},{90,100,"jambeDroite"}}return v(ab,bb)end function x(ab)print("GetLibelleLocalisationDegats:localisationDegats:",ab)local bb={}local cb="LibLocDegats"bb["tete"]=y(cb.."Tete")bb["brasSecondaire"]=y(cb.."BrasG")bb["brasPrincipal"]=y(cb.."BrasD")bb["corps"]=y(cb.."Corps")bb["jambeGauche"]=y(cb.."JambeG")bb["jambeDroite"]=y(cb.."JambeD")print("localisationDegats[localisationDegats]:",bb[ab])return bb[ab]end function z(ab,bb)ab=tonumber(ab)local cb="LibLocEffMal"local db={{1,20,A(cb.."1")},{21,40,A(cb.."2")},{41,60,A(cb.."3")},{61,70,A(cb.."4")},{71,80,A(cb.."5")},{81,90,A(cb.."6")},{91,100,A(cb.."7")}}return string.format(v(ab,db),bb)end function B(ab,bb,cb)print("GetLibelleEffetCoupCritiques:localisationDegats:",ab)local db=rpg.roll.dice(2,0,9)local eb=db[1]local fb=db[2]local gb=i(eb,fb)local hb=""local ib=0 local jb=""local kb="LibEffCrit"local lb=1 if ab=="Tête"then if gb >= 1 and gb <= 10 then hb="Blessure spectaculaire"ib=1 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 11 and gb <= 20 then hb="Coupure mineure"ib=1 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 21 and gb <= 25 then hb="Coup à l'oeil"ib=1 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 26 and gb <= 30 then hb="Frappe à l'oreille"ib=1 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 31 and gb <= 35 then hb="Coup percutant"ib=2 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 36 and gb <= 40 then hb="Oeil au beurre noir"ib=2 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 41 and gb <= 45 then hb="Oreille tranchée"ib=2 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 46 and gb <= 50 then hb="En plein front"ib=2 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 51 and gb <= 55 then hb="Mâchoire fracturée"ib=3 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 56 and gb <= 60 then hb="Blessure majeure à l'oeil"ib=3 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 61 and gb <= 65 then hb="Blessure majeure à l'oreille"ib=3 lb= lb+1 jb=string.format(y(kb..lb),bb,cb,cb,cb)elseif gb >= 66 and gb <= 70 then hb="Nez cassé"ib=3 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 71 and gb <= 75 then hb="Mâchoire cassée"ib=4 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 76 and gb <= 80 then hb="Commotion cérébrale"ib=4 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 81 and gb <= 85 then hb="Bouche explosée"ib=4 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 86 and gb <= 90 then hb="Oreille mutilée"ib=4 lb= lb+1 jb=string.format(y(kb..lb),cb,bb)elseif gb >= 91 and gb <= 93 then hb="Œil crevé"ib=5 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 94 and gb <= 96 then hb="Coup défigurant"ib=5 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 97 and gb <= 99 then hb="Mâchoire mutilée"ib=5 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb==100 then hb="Mort"ib=666 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)end elseif ab == "Bras secondaire"or ab == "Bras principal"then if gb >= 1 and gb <= 10 then hb="Choc au bras"ib=1 lb= lb+1 jb=string.format(y(kb..lb),ab,cb)elseif gb >= 11 and gb <= 20 then hb="Coupure mineure"ib=1 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 21 and gb <= 25 then hb="Torsion"ib=1 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 26 and gb <= 30 then hb="Choc violent au bras"ib=2 lb= lb+1 jb=string.format(y(kb..lb),cb,ab)elseif gb >= 31 and gb <= 35 then hb="Déchirure musculaire"ib=2 lb= lb+1 jb=string.format(y(kb..lb),ab,cb)elseif gb >= 36 and gb <= 40 then hb="Main ensanglantée"ib=2 lb= lb+1 jb=string.format(y(kb..lb),ab,cb)elseif gb >= 41 and gb <= 45 then hb="Clef de bras"ib=2 lb= lb+1 jb=string.format(y(kb..lb),ab,cb)elseif gb >= 46 and gb <= 50 then hb="Blessure béante"ib=3 lb= lb+1 jb=string.format(y(kb..lb),cb,ab)elseif gb >= 51 and gb <= 55 then hb="Cassure nette"ib=3 lb= lb+1 jb=string.format(y(kb..lb),ab,cb)elseif gb >= 56 and gb <= 60 then hb="Ligament rompu"ib=3 lb= lb+1 jb=string.format(y(kb..lb),cb,ab)elseif gb >= 61 and gb <= 65 then hb="Coupure profonde"ib=3 lb= lb+1 jb=string.format(y(kb..lb),ab,cb)elseif gb >= 66 and gb <= 70 then hb="Artère endommagée"ib=4 lb= lb+1 jb=string.format(y(kb..lb),cb,ab)elseif gb >= 71 and gb <= 75 then hb="Coude fracassé"ib=4 lb= lb+1 jb=string.format(y(kb..lb),ab,cb,cb)elseif gb >= 76 and gb <= 80 then hb="Épaule luxée"ib=4 lb= lb+1 jb=string.format(y(kb..lb),ab,cb,cb)elseif gb >= 81 and gb <= 85 then hb="Doigt sectionné"ib=4 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 86 and gb <= 90 then hb="Main ouverte"ib=5 lb= lb+1 jb=string.format(y(kb..lb),ab,cb)elseif gb >= 91 and gb <= 93 then hb="Biceps déchiqueté"ib=5 lb= lb+1 jb=string.format(y(kb..lb),ab,cb)elseif gb >= 94 and gb <= 96 then hb="Main mutilée"ib=5 lb= lb+1 jb=string.format(y(kb..lb),ab,cb)elseif gb >= 97 and gb <= 99 then hb="Tendons coupés"ib=5 lb= lb+1 jb=string.format(y(kb..lb),ab,cb)elseif gb==100 then hb="Démembrement fatal"ib=666 lb= lb+1 jb=string.format(y(kb..lb),ab,cb)end elseif ab=="Corps"then if gb >= 1 and gb <= 10 then hb="Rien qu'une égratignure !"ib=1 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 11 and gb <= 20 then hb="Coup au ventre"ib=1 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 21 and gb <= 25 then hb="Coup bas"ib=1 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 26 and gb <= 30 then hb="Torsion du dos"ib=1 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 31 and gb <= 35 then hb="Souffle coupé"ib=2 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 36 and gb <= 40 then hb="Bleus aux côtes"ib=2 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 41 and gb <= 45 then hb="Clavicule tordue"ib=2 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 46 and gb <= 50 then hb="Chairs déchirées"ib=2 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 51 and gb <= 55 then hb="Côtes fracturées"ib=3 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 56 and gb <= 60 then hb="Blessure béante"ib=3 lb= lb+1 jb=string.format(y(kb..lb),cb,ab)elseif gb >= 61 and gb <= 65 then hb="Entaille douloureuse"ib=3 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 66 and gb <= 70 then hb="Dégâts artériels"ib=3 lb= lb+1 jb=string.format(y(kb..lb),cb,ab)elseif gb >= 71 and gb <= 75 then hb="Dos froissé"ib=4 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 76 and gb <= 80 then hb="Hanche fracturée"ib=4 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 81 and gb <= 85 then hb="Blessure majeure au torse"ib=4 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 86 and gb <= 90 then hb="Blessure au ventre"ib=4 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 91 and gb <= 93 then hb="Cage thoracique perforée"ib=5 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 94 and gb <= 96 then hb="Clavicule cassée"ib=5 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 97 and gb <= 99 then hb="Hémorragie interne"ib=5 lb= lb+1 jb=string.format(y(kb..lb))elseif gb==100 then hb="Éventré"ib=666 lb= lb+1 jb=string.format(y(kb..lb),cb)end elseif ab == "Jambe gauche"or ab == "Jambe droite"then if gb >= 1 and gb <= 10 then hb="Orteil contusionné"ib=1 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 11 and gb <= 20 then hb="Cheville tordue"ib=1 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 21 and gb <= 25 then hb="Coupure mineure"ib=1 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 26 and gb <= 30 then hb="Perte d'équilibre"ib=1 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 31 and gb <= 35 then hb="Coup à la cuisse"ib=2 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 36 and gb <= 40 then hb="Cheville foulée"ib=2 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 41 and gb <= 45 then hb="Genou tordu"ib=2 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 46 and gb <= 50 then hb="Coupure à l'orteil"ib=2 lb= lb+1 jb=string.format(y(kb..lb))elseif gb >= 51 and gb <= 55 then hb="Mauvaise coupure"ib=3 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 56 and gb <= 60 then hb="Genou méchamment tordu"ib=3 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 61 and gb <= 65 then hb="Jambe charcutée"ib=3 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 66 and gb <= 70 then hb="Cuisse lacérée"ib=3 lb= lb+1 jb=string.format(y(kb..lb),bb,cb,cb,ab)elseif gb >= 71 and gb <= 75 then hb="Tendon rompu"ib=4 lb= lb+1 jb=string.format(y(kb..lb),cb,cb)elseif gb >= 76 and gb <= 80 then hb="Entaille au tibia"ib=4 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 81 and gb <= 85 then hb="Genou cassé"ib=4 lb= lb+1 jb=string.format(y(kb..lb),bb,cb,cb)elseif gb >= 86 and gb <= 90 then hb="Genou démis"ib=4 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 91 and gb <= 93 then hb="Pied écrasé"ib=5 lb= lb+1 jb=string.format(y(kb..lb),bb,cb)elseif gb >= 94 and gb <= 96 then hb="Pied sectionné"ib=5 lb= lb+1 jb=string.format(y(kb..lb),cb)elseif gb >= 97 and gb <= 99 then hb="Tendon coupé"ib=5 lb= lb+1 jb=string.format(y(kb..lb),cb,cb)elseif gb==100 then hb="Bassin fracassé"ib=666 lb= lb+1 jb=string.format(y(kb..lb),bb,cb,cb)end end return eb,fb,hb,ib,jb end function C(ab,bb)if bb[ab]then return bb[ab]else return false end end function D(ab)local bb={}local cb=string.match(ab,".*(Enroulement).*")bb["enroulement"]= cb~=nil local db=string.match(ab,".*(Poudre).*")bb["poudre"]= db~=nil local eb=string.match(ab,".*Répétition%((%d*)%).*")bb["repetition"]=eb local fb=string.match(ab,".*(Assommante).*")bb["assommante"]= fb~=nil local gb=string.match(ab,".*(Défensive).*")bb["defensive"]= gb~=nil local hb=string.match(ab,".*(Devastatrice).*")bb["devastatrice"]= hb~=nil local ib=string.match(ab,".*(Empaleuse).*")bb["empaleuse"]= ib~=nil local jb=string.match(ab,".*Explosion%((%d*)%).*")bb["explosion"]=jb local kb=string.match(ab,".*(Immobilisante).*")bb["immobilisante"]= kb~=nil local lb=string.match(ab,".*(Incassable).*")bb["incassable"]= lb~=nil local mb=string.match(ab,".*(Percutante).*")bb["percutante"]= mb~=nil local nb=string.match(ab,".*(Perforante).*")bb["perforante"]= nb~=nil local ob=string.match(ab,".*(Perturbante).*")bb["perturbante"]= ob~=nil local pb=string.match(ab,".*(Piège-lame).*")bb["piegeLame"]= pb~=nil local qb=string.match(ab,".*(Pistolet).*")bb["pistolet"]= qb~=nil local rb=string.match(ab,".*(Pointue).*")bb["pointue"]= rb~=nil local sb=string.match(ab,".*(Précise).*")bb["precise"]= sb~=nil local tb=string.match(ab,".*Protectrice%((%d*)%).*")bb["protectrice"]= tb~=nil local ub=string.match(ab,".*(Rapide).*")bb["rapide"]= ub~=nil local vb=string.match(ab,".*(Taille).*")bb["taille"]= vb~=nil local wb=string.match(ab,".*(Dangereuse).*")bb["dangereuse"]= wb~=nil local xb=string.match(ab,".*(Épuisante).*")bb["epuisante"]= xb~=nil local yb=string.match(ab,".*(Imprécise).*")bb["imprecise"]= yb~=nil local zb=string.match(ab,".*(Inoffensive).*")bb["inoffensive"]= zb~=nil local Ab=string.match(ab,".*(Inoffensive).*")bb["imprecise"]= Ab~=nil local Bb=string.match(ab,".*(Lente).*")bb["lente"]= Bb~=nil local Cb=string.match(ab,".*Recharge%((%d*)%).*")bb["recharge"]= Cb~=nil return bb end function E(ab)if(ab ~= "" and ab ~= nil and not (type(ab) == "table" and #ab == 0)and true)then return false else return true end end function G(ab,bb)if not E(rpg.character.getfield(ab,bb))then return rpg.character.getfield(ab,bb)else return nil end end function H(ab,bb,cb,db,eb)local fb={}fb["tete"]={}fb["corps"]={}fb["bras"]={}fb["jambes"]={}local gb=0 local hb=0 local ib=false local jb=0 local kb=false local lb=0 local mb=false local nb=0 local ob=false for pb=2,6,1 do if(G(ab, string.format("b22_l%d_f6c", pb)) ~= "" and G(ab, string.format("b22_l%d_f6c", pb)) ~= nil and true)then print("Pièce d'armure portée")end end return gb end function I(ab)local bb,cb={},{}local db,eb=false,false local fb={}fb["Nom"]="Main nue"fb["Groupe"]="Base"fb["Encombrement"]=0 fb["PorteeAllonge"]="Personnelle"fb["Degats"]="+BF +0"fb["AtoutsDefauts"]="Inoffensive"fb["inoffensive"]=true print("GetArmesEnMain:idPersonnage:",ab)for gb=2,11,1 do if(G(ab, string.format("b42_l%d_f7c", gb)) ~= "" and G(ab, string.format("b42_l%d_f7c", gb)) ~= nil and true)then db=true local hb=G(ab,string.format("b42_l%d_f1i",gb))local ib=G(ab,string.format("b42_l%d_f2i",gb))local jb=G(ab,string.format("b42_l%d_f3i",gb))local kb=G(ab,string.format("b42_l%d_f4i",gb))local lb=G(ab,string.format("b42_l%d_f5i",gb))local mb=G(ab,string.format("b42_l%d_f6i",gb))bb["Nom"]=hb bb["Groupe"]=ib bb["Encombrement"]=jb bb["PorteeAllonge"]=kb bb["Degats"]=lb bb["AtoutsDefauts"]=mb bb["enroulement"]=false bb["poudre"]=false bb["repetition"]=false bb["assommante"]=false bb["defensive"]=false bb["devastatrice"]=false bb["empaleuse"]=false bb["explosion"]=false bb["immobilisante"]=false bb["incassable"]=false bb["percutante"]=false bb["perforante"]=false bb["perturbante"]=false bb["piegeLame"]=false bb["pistolet"]=false bb["pointue"]=false bb["precise"]=false bb["protectrice"]=false bb["rapide"]=false bb["taille"]=false bb["dangereuse"]=false bb["epuisante"]=false bb["imprecise"]=false bb["inoffensive"]=false bb["lente"]=false bb["recharge"]=false if(bb["AtoutsDefauts"]~=nil)then print('armeEnMain1["AtoutsDefauts"]',bb["AtoutsDefauts"])print("atoutsDefautsArme",mb)local nb=string.match(mb,".*(Enroulement).*")bb["enroulement"]= nb~=nil local ob=string.match(mb,".*(Poudre).*")bb["poudre"]= ob~=nil local pb=string.match(mb,".*Répétition%s*%((%d*)%).*")bb["repetition"]=pb print('armeEnMain1["repetition"]',bb["repetition"])local qb=string.match(mb,".*(Assommante).*")bb["assommante"]= qb~=nil local rb=string.match(mb,".*(Défensive).*")bb["defensive"]= rb~=nil local sb=string.match(mb,".*(Devastatrice).*")bb["devastatrice"]= sb~=nil local tb=string.match(mb,".*(Empaleuse).*")bb["empaleuse"]= tb~=nil local ub=string.match(mb,".*Explosion%s*%((%d*)%).*")bb["explosion"]=ub local vb=string.match(mb,".*(Immobilisante).*")bb["immobilisante"]= vb~=nil local wb=string.match(mb,".*(Incassable).*")bb["incassable"]= wb~=nil local xb=string.match(mb,".*(Percutante).*")bb["percutante"]= xb~=nil local yb=string.match(mb,".*(Perforante).*")bb["perforante"]= yb~=nil local zb=string.match(mb,".*(Perturbante).*")bb["perturbante"]= zb~=nil local Ab=string.match(mb,".*(Piège-lame).*")bb["piegeLame"]= Ab~=nil local Bb=string.match(mb,".*(Pistolet).*")bb["pistolet"]= Bb~=nil local Cb=string.match(mb,".*(Pointue).*")bb["pointue"]= Cb~=nil local Db=string.match(mb,".*(Précise).*")bb["precise"]= Db~=nil local Eb=string.match(mb,".*Protectrice%s*%((%d*)%).*")bb["protectrice"]= Eb~=nil local Fb=string.match(mb,".*(Rapide).*")bb["rapide"]= Fb~=nil local Gb=string.match(mb,".*(Taille).*")bb["taille"]= Gb~=nil local Hb=string.match(mb,".*(Dangereuse).*")bb["dangereuse"]= Hb~=nil local Ib=string.match(mb,".*(Épuisante).*")bb["epuisante"]= Ib~=nil local Jb=string.match(mb,".*(Imprécise).*")bb["imprecise"]= Jb~=nil local Kb=string.match(mb,".*(Inoffensive).*")bb["inoffensive"]= Kb~=nil print('armeEnMain1["inoffensive"]',bb["inoffensive"])local Lb=string.match(mb,".*(Lente).*")bb["lente"]= Lb~=nil local Mb=string.match(mb,".*Recharge%s*%((%d*)%).*")bb["recharge"]= Mb~=nil end else end end for gb=2,11,1 do if(G(ab, string.format("b42_l%d_f8c", gb)) ~= "" and G(ab, string.format("b42_l%d_f8c", gb)) ~= nil and true)then eb=true local hb=G(ab,string.format("b42_l%d_f1i",gb))local ib=G(ab,string.format("b42_l%d_f2i",gb))local jb=G(ab,string.format("b42_l%d_f3i",gb))local kb=G(ab,string.format("b42_l%d_f4i",gb))local lb=G(ab,string.format("b42_l%d_f5i",gb))local mb=G(ab,string.format("b42_l%d_f6i",gb))cb["Nom"]=hb cb["Groupe"]=ib cb["Encombrement"]=jb cb["PorteeAllonge"]=kb cb["Degats"]=lb cb["AtoutsDefauts"]=mb cb["enroulement"]=false cb["poudre"]=false cb["repetition"]=false cb["assommante"]=false cb["defensive"]=false cb["devastatrice"]=false cb["empaleuse"]=false cb["explosion"]=false cb["immobilisante"]=false cb["incassable"]=false cb["percutante"]=false cb["perforante"]=false cb["perturbante"]=false cb["piegeLame"]=false cb["pistolet"]=false cb["pointue"]=false cb["precise"]=false cb["protectrice"]=false cb["rapide"]=false cb["taille"]=false cb["dangereuse"]=false cb["epuisante"]=false cb["imprecise"]=false cb["inoffensive"]=false cb["lente"]=false cb["recharge"]=false if(cb["AtoutsDefauts"]~=nil)then print('armeEnMain2["AtoutsDefauts"]',cb["AtoutsDefauts"])print("atoutsDefautsArme",mb)local nb=string.match(mb,".*(Enroulement).*")cb["enroulement"]= nb~=nil local ob=string.match(mb,".*(Poudre).*")cb["poudre"]= ob~=nil local pb=string.match(mb,".*Répétition%s*%((%d*)%).*")cb["repetition"]=pb print('armeEnMain2["repetition"]',cb["repetition"])local qb=string.match(mb,".*(Assommante).*")cb["assommante"]= qb~=nil local rb=string.match(mb,".*(Défensive).*")cb["defensive"]= rb~=nil local sb=string.match(mb,".*(Devastatrice).*")cb["devastatrice"]= sb~=nil local tb=string.match(mb,".*(Empaleuse).*")cb["empaleuse"]= tb~=nil local ub=string.match(mb,".*Explosion%s*%((%d*)%).*")cb["explosion"]=ub local vb=string.match(mb,".*(Immobilisante).*")cb["immobilisante"]= vb~=nil local wb=string.match(mb,".*(Incassable).*")cb["incassable"]= wb~=nil local xb=string.match(mb,".*(Percutante).*")cb["percutante"]= xb~=nil local yb=string.match(mb,".*(Perforante).*")cb["perforante"]= yb~=nil local zb=string.match(mb,".*(Perturbante).*")cb["perturbante"]= zb~=nil local Ab=string.match(mb,".*(Piège-lame).*")cb["piegeLame"]= Ab~=nil local Bb=string.match(mb,".*(Pistolet).*")cb["pistolet"]= Bb~=nil local Cb=string.match(mb,".*(Pointue).*")cb["pointue"]= Cb~=nil local Db=string.match(mb,".*(Précise).*")cb["precise"]= Db~=nil local Eb=string.match(mb,".*Protectrice%s*%((%d*)%).*")cb["protectrice"]= Eb~=nil local Fb=string.match(mb,".*(Rapide).*")cb["rapide"]= Fb~=nil local Gb=string.match(mb,".*(Taille).*")cb["taille"]= Gb~=nil local Hb=string.match(mb,".*(Dangereuse).*")cb["dangereuse"]= Hb~=nil local Ib=string.match(mb,".*(Épuisante).*")cb["epuisante"]= Ib~=nil local Jb=string.match(mb,".*(Imprécise).*")cb["imprecise"]= Jb~=nil local Kb=string.match(mb,".*(Inoffensive).*")cb["inoffensive"]= Kb~=nil print('armeEnMain2["inoffensive"]',cb["inoffensive"])local Lb=string.match(mb,".*(Lente).*")cb["lente"]= Lb~=nil local Mb=string.match(mb,".*Recharge%s*%((%d*)%).*")cb["recharge"]= Mb~=nil end end end if db then J=bb else J=fb end if eb then K=cb else K=fb end return J,K end function L(ab)local bb=0 for cb=1,10,1 do if(rpg.character.getfield(ab, string.format("b47_l1_f%dc", cb)) == "on"and true)then bb=cb end end return bb end function M(ab)local bb= tonumber(rpg.character.getfield(ab, "b40_l1_f1i"))or 0 if(bb>0)then return bb else return 0 end end function N(ab)local bb= tonumber(rpg.character.getfield(ab, "b40_l2_f1i"))/2 or 0 bb=math.floor(bb)if(bb>0)then return bb else return 0 end end function O(ab,bb,cb,db,eb,fb,gb,hb,ib)ab=string.lower(ab)local jb=""local kb="EvaTst"if ab=="simple"then if eb and fb then local lb=Z("div",nil,nil,nil,"display: flex; color: white")local mb=lb.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; width: 100%")mb.addChild("span",string.format("Résultat du Test %s",ab),nil,nil,"font-size: 1.2em; font-weight: bold; text-align: center; padding-bottom: 10px")local nb=mb.addChild("div",nil,nil,nil,"display: flex; width: 100%")local ob=nb.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; flex-grow: 1; align-items: center")ob.addChild("div",bb,nil,nil,"display: flex; font-weight: bold")ob.addChild("div", cb.." (" .. db .. ")",nil,nil,"display: flex")ob.addChild("div", "Difficulté "..o(fb) .. " (" .. p(fb) .. ")",nil,nil,"display: flex")ob.addChild("div", "Seuil effectif : "..eb,nil,nil,"display: flex")local pb=lb.build()local qb=Z("div",nil,nil,nil,"display: flex; color: white")local rb=qb.addChild("div",nil,nil,nil,"display: flex; flex-direction: row; width: 100%")local sb=rb.addChild("div",nil,nil,nil,"display: flex; width: 100%; justify-content: center")sb.addChild("div",hb,nil,"yellow_d10",y("EvaTst2"))sb.addChild("div",ib,nil,"white_d10",y("EvaTst2"))local tb=qb.build()local ub=i(hb,ib)local vb=j(ub,eb)local wb=l(ab,hb,ib)local xb=""if vb==true then xb="Succès"else xb="Échec"end local yb=""if wb==true then yb="Critique"else yb=""end local zb=string.format(y(kb..3),ub,eb,xb,yb)local Ab=""if vb and not wb then Ab=string.format(y(kb..4))elseif vb and wb then Ab=string.format(y(kb..5))elseif not vb and not wb then Ab=string.format(y(kb..6))elseif not vb and wb then Ab=string.format(y(kb..7))end return rpg.smf.save(pb,tb,zb,Ab,"wfrp4")end elseif ab=="spectaculaire"then local lb=Z("div",nil,nil,nil,"display: flex; color: white")local mb=lb.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; width: 100%")mb.addChild("span",string.format("Résultat du Test %s",ab),nil,nil,"font-size: 1.2em; font-weight: bold; text-align: center; padding-bottom: 10px")local nb=mb.addChild("div",nil,nil,nil,"display: flex; width: 100%")local ob=nb.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; flex-grow: 1; align-items: center")ob.addChild("div",bb,nil,nil,"display: flex; font-weight: bold")ob.addChild("div", cb.." (" .. db .. ")",nil,nil,"display: flex")ob.addChild("div", "Difficulté "..o(fb) .. " (" .. p(fb) .. ")",nil,nil,"display: flex")ob.addChild("div", "Seuil effectif : "..eb,nil,nil,"display: flex")local pb=lb.build()local qb=Z("div",nil,nil,nil,"display: flex; color: white")local rb=qb.addChild("div",nil,nil,nil,"display: flex; flex-direction: row; width: 100%")local sb=rb.addChild("div",nil,nil,nil,"display: flex; width: 100%; justify-content: center")sb.addChild("div",hb,nil,"yellow_d10",y("EvaTst2"))sb.addChild("div",ib,nil,"white_d10",y("EvaTst2"))local tb=qb.build()local ub=i(hb,ib)local vb=j(ub,eb)local wb=l(ab,hb,ib)local xb=s(ub,eb)local yb=""local zb=""local Ab=""if vb==true then if wb then jb=string.format(y(kb..9),ub,eb,xb)Ab=string.format(y(kb..10))else if(xb >= 6 and true)then jb=string.format(y(kb..11),ub,eb,xb)Ab=string.format(y(kb..12))elseif(xb == 4 or xb == 5)then jb=string.format(y(kb..13),ub,eb,xb)Ab=string.format(y(kb..14))elseif xb == 2 or xb == 3 then jb=string.format(y(kb..15),ub,eb,xb)Ab=string.format(y(kb..16))elseif xb == 0 or xb == 1 then jb=string.format(y(kb..17),ub,eb,xb)Ab=string.format(y(kb..18))end end elseif vb==false then if wb then jb=string.format(y(kb..19),ub,eb,xb)Ab=string.format(y(kb..20))else if xb<=-6 then jb=string.format(y(kb..21),ub,eb,xb)Ab=string.format(y(kb..22))elseif xb == -4 or xb == -5 then jb=string.format(y(kb..23),ub,eb,xb)Ab=string.format(y(kb..24))elseif xb == -2 or xb == -3 then jb=string.format(y(kb..25),ub,eb,xb)Ab=string.format(y(kb..26))elseif xb == 0 or xb == -1 then jb=string.format(y(kb..27),ub,eb,xb)Ab=string.format(y(kb..28))end end end local Bb=jb local Cb=Ab return rpg.smf.save(pb,tb,Bb,Cb,"wfrp4")else return rpg.smf.save("Type de test inconnu","myrolls","myresults","myfooter","wfrp4")end end function P(ab,bb,cb,db,eb,fb,gb,hb,ib,jb,kb,lb,mb,nb)local ob=""local pb= ab or"Protagoniste 1"local qb= hb or"Protagoniste 2"local rb=Z("div",nil,nil,nil,"display: flex; color: white")local sb=rb.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; width: 100%")sb.addChild("span","Résultat du Test Opposé",nil,nil,"font-size: 1.2em; font-weight: bold; text-align: center; padding-bottom: 10px")local tb=sb.addChild("div",nil,nil,nil,"display: flex; width: 100%")local ub=tb.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; flex-grow: 1; align-items: center")ub.addChild("div",pb,nil,nil,"display: flex; font-weight: bold")ub.addChild("div", bb.." (" .. cb .. ")",nil,nil,"display: flex")ub.addChild("div", "Difficulté "..o(eb) .. " (" .. p(eb) .. ")",nil,nil,"display: flex")ub.addChild("div", "Seuil effectif : "..db,nil,nil,"display: flex")tb.addChild("hr",nil,nil,nil,"border: color; margin: 5px; width: 2px")local vb=tb.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; flex-grow: 1; align-items: center")vb.addChild("div",qb,nil,nil,"display: flex; font-weight: bold")vb.addChild("div", ib.." (" .. jb .. ")",nil,nil,"display: flex")vb.addChild("div", "Difficulté "..o(lb) .. " (" .. p(lb) .. ")",nil,nil,"display: flex")vb.addChild("div", "Seuil effectif : "..kb,nil,nil,"display: flex")local wb=rb.build()local xb=Z("div",nil,nil,nil,"display: flex; color: white")local yb=xb.addChild("div",nil,nil,nil,"display: flex; flex-direction: row; width: 100%")local zb=yb.addChild("div",nil,nil,nil,"display: flex; width: 100%; justify-content: center")zb.addChild("div",fb,nil,"yellow_d10",y("EvaTst2"))zb.addChild("div",gb,nil,"white_d10",y("EvaTst2"))yb.addChild("hr",nil,nil,nil,"border: color; margin: 5px; width: 2px;")local Ab=yb.addChild("div",nil,nil,nil,"display: flex; width: 100%; justify-content: center")Ab.addChild("div",mb,nil,"yellow_d10",y("EvaTst2"))Ab.addChild("div",nb,nil,"white_d10",y("EvaTst2"))local Bb=xb.build()local Cb=i(fb,gb)local Db=i(mb,nb)local Eb=j(Cb,db)local Fb=j(Db,kb)local Gb=l("oppose",fb,gb)local Hb=l("oppose",mb,nb)local Ib=s(Cb,db)local Jb=s(Db,kb)local Kb=""local Lb=""local Mb=""local Nb=""local Ob=""local Pb=""local Qb=""local Rb=""if Gb then Ob="Critique"if(Ib >= 0 and Ib < 6)then Ib=6 elseif(Ib <= 0 and Ib > -6)then Ib=-6 end end if Hb then Pb="Critique"if(Jb >= 0 and Jb < 6)then Jb=6 elseif(Jb <= 0 and Jb > -6)then Jb=-6 end end Ib= Ib+t(cb)Jb= Jb+t(jb)if Eb then Kb="Succès"else Kb="Échec"end if Fb then Lb="Succès"else Lb="Échec"end Mb=string.format("%s %s[br/]avec [u]%d Degrés de Réussite[/u]",Kb,Ob,Ib)Nb=string.format("%s %s[br/]avec [u]%d Degrés de Réussite[/u]",Lb,Pb,Jb)local Sb=Z("div",nil,nil,nil,"display: flex; color: white")local Tb=Sb.addChild("div",nil,nil,nil,"display: flex; flex-direction: row; width: 100%")local Ub=Tb.addChild("div",nil,nil,nil,"display: flex; width: 100%; justify-content: center")Ub.addChild("span",Mb,nil,nil,"color: white")Tb.addChild("hr",nil,nil,nil,"border: color; margin: 5px; width: 2px;")local Vb=Tb.addChild("div",nil,nil,nil,"display: flex; width: 100%; justify-content: center")Vb.addChild("span",Nb,nil,nil,"color: white")local Wb=Sb.build()local Xb=""local Yb=""local Zb=""if(Ib > Jb and true)then Zb=string.format("[u]%s remporte le Test[/u][br/]avec %d Degrés de Réussite d'écart.",pb, Ib-Jb)Xb=pb Yb=qb elseif(Ib < Jb and true)then Zb=string.format("[u]%s remporte le Test[/u][br/]avec %d Degrés de Réussite d'écart.",qb, Jb-Ib)Xb=qb Yb=pb elseif(Ib == Jb and true)then if Eb and not Fb then Zb=string.format("[u]%s remporte le Test[/u], départagé par le Succès du lancer",pb)Xb=pb Yb=qb elseif Fb and not Eb then Zb=string.format("[u]%s remporte le Test[/u], départagé par le Succès du lancer.",qb)Xb=qb Yb=pb elseif(Eb and Eb)or(not Eb and not Fb)then if db>kb then Zb=string.format("[u]%s remporte le Test de peu[/u], départagé par le Seuil du Test.",pb)Xb=pb Yb=qb elseif(db < kb and true)then Zb=string.format("[u]%s remporte le Test[/u], départagé par le Seuil du Test.",qb)Xb=qb Yb=pb elseif(db == kb and true)then if cb>jb then Zb=string.format("[u]%s remporte le Test[/u], départagé par le Score de compétence.",pb)Xb=pb Yb=qb elseif(cb < jb and true)then Zb=string.format("[u]%s remporte le Test[/u], départagé par le Score de compétence.",qb)Xb=qb Yb=pb elseif(cb == jb and true)then if(Cb < Db and true)then Zb=string.format("[u]%s remporte le Test[/u], départagé par le Lancer de dé.",pb)Xb=pb Yb=qb elseif(Cb > Cb and true)then Zb=string.format("[u]%s remporte le Test[/u], départagé par le Lancer de dé.",qb)Xb=qb Yb=pb elseif(Cb == Db and true)then Zb=string.format("[u]Aucun protagoniste ne remporte le Test, c'est une égalité parfaite[/u].")end end end end end local ac=""if Eb and Fb then ac= ac..string.format( "Les deux protagonistes ont réussi, mais %s a tout de même pris le dessus sur %s.", Xb, Yb )elseif(Eb and not Fb)or(Fb and not Eb)then ac= ac..string.format("Le résultat est clair, sans ambigüité : %s a réussi et %s a échoué.", Xb, Yb)elseif not Eb and not Fb then ac= ac.."Toutefois, les deux protagonistes ont échoué, quel duel de bras cassés !"end local bc=""bc= bc..'[hr style="border: color; margin: 5px; "]'bc= bc..'[div style="display: flex;margin-top: 10px"]'bc= bc..'[div style="display: flex; flex-grow: 1; justify-content: center"]'bc= bc..'[div style="color: white"]'bc= bc..'[div style="color: white; font-size: 1.2em; font-weight: bold; padding-bottom:5px; line-height: 1.4em"]' .. Zb .. "[/div]"bc= bc..'[div style="color: white; font-weight: bold; padding-top:5px"]' .. ac .. "[/div]"bc= bc.."[/div]"bc= bc.."[/div]"bc= bc.."[/div]"return rpg.smf.save(wb,Bb,Wb,bc,"wfrp4")end function Q(ab)if _VERSION=="Lua 5.1"then return unpack(ab)elseif _VERSION == "Lua 5.2" or _VERSION == "Lua 5.3"or _VERSION == "Lua 5.4"then return table.unpack(ab)end end function R(ab)print("EvaluateTestCorpsACorps")local bb,cb,db,eb,fb,gb,hb,ib,jb,kb,lb,mb,nb,ob,pb,qb,rb,sb,tb,ub,vb,wb=Q(ab)local xb=""local yb=""local zb=""local Ab=""local Bb= bb or"Protagoniste 1"local Cb= mb or"Protagoniste 2"local Db=""local Eb=Z("div",nil,nil,nil,"display: flex; color: white")local Fb=Eb.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; width: 100%")Fb.addChild("span","Attaque au Corps-à-Corps",nil,nil,"font-size: 1.2em; font-weight: bold; text-align: center; padding-bottom: 10px")local Gb=Fb.addChild("div",nil,nil,nil,"display: flex; width: 100%")local Hb=Gb.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; flex-grow: 1; align-items: center")Hb.addChild("div","Attaquant",nil,nil,"display: flex; font-weight: bold")Hb.addChild("div",Bb,nil,nil,"display: flex; font-weight: bold")Hb.addChild("div", "Seuil de base : "..db,nil,nil,"display: flex;")Hb.addChild("div", "Difficulté "..o(fb) .. " (" .. p(fb) .. ")",nil,nil,"display: flex")Hb.addChild("div", gb.." Avantages (" .. q(gb) .. ")",nil,nil,"display: flex")Hb.addChild("div", "Seuil effectif : "..eb,nil,nil,"display: flex")Hb.addChild("div", "Bonus de Force : "..jb,nil,nil,"display: flex")Hb.addChild("div", "Arme : "..kb['Nom'],nil,nil,"display: flex")if(lb['Nom']~='Main nue')then local Cc=Hb.addChild("div",nil,nil,nil,"display: flex")Cc.addChild("span","Arme secondaire : ",nil,nil,nil)Cc.addChild("span",lb['Nom'],nil,nil,nil)end Gb.addChild('hr',nil,nil,nil,"border: color; margin: 5px")local Ib=Gb.addChild("div",nil,nil,nil,'display: flex; flex-direction: column; flex-grow: 1; align-items: center')Ib.addChild("div","Défenseur",nil,nil,"display: flex; font-weight: bold")Ib.addChild("div",Cb,nil,nil,"display: flex; font-weight: bold")Ib.addChild("div", "Seuil de base : "..ob,nil,nil,"display: flex;")Ib.addChild("div", "Niveau "..o(qb) .. " (" .. p(qb) .. ")",nil,nil,"display: flex;")Ib.addChild("div", rb.." Avantages (" .. q(rb) .. ")",nil,nil,"display: flex;")Ib.addChild("div", "Seuil effectif : "..pb,nil,nil,"display: flex;")Ib.addChild("div", "Bonus d'Endurance : "..ub,nil,nil,"display: flex;")xb=Eb.build()local Jb=Z("div",nil,nil,nil,"display: flex")local Kb=Jb.addChild("div",nil,nil,nil,"display: flex; flex-grow: 1; justify-content: center;")Kb.addChild("div",hb,nil,"yellow_d10",y("EvaTst2"))Kb.addChild("div",ib,nil,"white_d10",y("EvaTst2"))Jb.addChild("hr",nil,nil,nil,"border: color; margin: 5px")local Lb=Jb.addChild("div",nil,nil,nil,"display: flex; flex-grow: 1; justify-content: center;")Lb.addChild("div",sb,nil,"yellow_d10",y("EvaTst2"))Lb.addChild("div",tb,nil,"white_d10",y("EvaTst2"))yb=Jb.build()local Mb=i(hb,ib)local Nb=i(sb,tb)local Ob=j(Mb,eb)local Pb=j(Nb,pb)local Qb=l("corps-a-corps",hb,ib)local Rb=l("corps-a-corps",sb,tb)local Sb=s(Mb,eb)local Tb=s(Nb,pb)local Ub=""local Vb=""local Wb=""local Xb=""local Yb=""local Zb=""local ac=""local bc=""local cc=""if Qb then Wb="Critique"end if Rb then Xb="Critique"end Sb= Sb+t(db)Tb= Tb+t(ob)if Ob then Ub="Succès"else Ub="Échec"end if Pb then Vb="Succès"else Vb="Échec"end Yb=string.format("%s %s[br/]avec [u]%d Degrés de Réussite[/u]",Ub,Wb,Sb)Zb=string.format("%s %s[br/]avec [u]%d Degrés de Réussite[/u]",Vb,Xb,Tb)local dc=Z("div",nil,nil,nil,"display: flex;")local ec=dc.addChild("div",nil,nil,nil,"display: flex; flex-grow: 1; justify-content: center")ec.addChild("span",Yb,nil,nil,"color: white")dc.addChild("hr",nil,nil,nil,"border: color; margin: 5px")local fc=dc.addChild("div",nil,nil,nil,"display: flex; flex-grow: 1; justify-content: center")ec.addChild("span",Zb,nil,nil,"color: white")zb=dc.build()local gc=""local hc=""local ic=""local jc=""local kc=""local lc=""local mc=0 local nc=0 local oc=""local pc=""local qc=0 local rc=0 local sc=0 local tc=0 if Qb then ic= w(rpg.roll.dice(1, 1, 100)[1])or""print("localisationDegats1:critique1",ic)qc,rc,kc,mc,oc=B(ic,Bb,Cb)else ic= w(Mb)or""print("localisationDegats1:pasCritique1",ic)kc=x(ic)print("libelleDegats1",kc)end if Rb then jc= w(rpg.roll.dice(1, 1, 100)[1])or""print("localisationDegats2:critique2",jc)sc,tc,lc,nc,pc=B(jc,Cb,Bb)print("d1_2_critique, d2_2_critique, libelleDegats2, ptsBlessureCritique2, effetsSupplementairesCritique2",sc,tc,lc,nc,pc)end if(Ob and Qb)then bc= bc..string.format( "[u]%s porte un Coup Critique[/u] touchant %s avec pour effet [b]%s[/b]. Le coup fait perdre directement %d Points de Blessure, avec des effets supplémentaires : %s", Bb, Cb, kc, mc, oc )end if(Pb and Rb)then cc= cc..string.format( "[u]En se défendant de l'attaque de %s, %s réussit un Coup Critique[/u] avec pour effet [b]%s[/b]. Le coup outrepasse l'armure éventuelle, et occasionne directement %d Dégâts, avec les effets supplémentaires suivants : %s", Bb, Cb, lc, nc, pc )end ac= bc.."[br/]" .. cc .. "[br/]"local uc,vc=u(Sb,jb,Tb,ub,kb)if(Sb > Tb and true)then ac= ac..string.format( "[u]%s attaque avec succès[/u]. Il touche %s %s et occasionne des Dégâts à hauteur de %s = %d Points de Blessure", Bb, Cb, kc, vc, uc )gc=Bb hc=Cb elseif(Sb < Tb and true)then ac= ac..string.format( "[u]%s remporte le Test[/u][br/]avec %d Degrés de Réussite d'écart.", Cb, Tb - Sb )gc=Cb hc=Bb elseif(Sb == Tb and true)then if Ob and not Pb then ac= ac..string.format(  "[u]%s remporte le Test[/u], départagé par le Succès du lancer. Il touche %s %s et occasionne des Dégâts à hauteur de " ..  vc .. " = %d Points de Blessure",  Bb,  Cb,  jc,  uc )gc=Bb hc=Cb elseif Pb and not Ob then ac= ac..string.format("[u]%s remporte le Test[/u], départagé par le Succès du lancer.", Cb)gc=Cb hc=Bb elseif(Ob and Ob)or(not Ob and not Pb)then if(eb > pb and true)then ac=  ac..string.format(  "[u]%s remporte le Test de peu[/u], départagé par le Seuil du Test. Il touche %s %s et occasionne des Dégâts à hauteur de " ..  vc .. " = %d Points de Blessure",  Bb,  Cb,  jc,  uc  )gc=Bb hc=Cb elseif(eb < pb and true)then ac=  ac..string.format("[u]%s remporte le Test[/u], départagé par le Seuil du Test.", Cb)gc=Cb hc=Bb elseif(eb == pb and true)then if db>ob then ac=  ac..string.format(  "[u]%s remporte le Test[/u], départagé par le Score de compétence. Il touche %s %s et occasionne des Dégâts à hauteur de " ..  vc .. " = %d Points de Blessure",  Bb,  Cb,  jc,  uc  )gc=Bb hc=Cb elseif(db < ob and true)then ac=  ac..string.format(  "[u]%s remporte le Test[/u], départagé par le Score de compétence.",  Cb  )gc=Cb hc=Bb elseif(db == ob and true)then if(Mb < Nb and true)then ac=  ac..string.format(  "[u]%s remporte le Test[/u], départagé par le Lancer de dé. Il touche %s %s et occasionne des Dégâts à hauteur de " ..   vc .. " = %d Points de Blessure",  Bb,  Cb,  jc,  uc  )gc=Bb hc=Cb elseif(Mb > Nb and true)then ac=  ac..string.format(  "[u]%s remporte le Test[/u], départagé par le Lancer de dé.",  Cb  )gc=Cb hc=Bb elseif(Mb == Nb and true)then ac=  ac..string.format("[u]Aucun protagoniste ne remporte le Test, c'est une égalité parfaite[/u].")end end end end end local wc=""if Ob and Pb then wc= wc..string.format( "Les deux protagonistes ont réussi, mais %s a tout de même pris le dessus sur %s.", gc, hc )elseif(Ob and not Pb)then wc= wc..string.format("Le résultat est clair, sans ambigüité : %s a réussi et %s a échoué.", gc, hc)elseif(Pb and not Ob)then wc= wc..string.format("Le résultat est clair, sans ambigüité : %s a réussi et %s a échoué.", gc, hc)elseif not Ob and not Pb then wc= wc.."Toutefois, les deux protagonistes ont échoué, quel duel de bras cassés !"end local xc=Z("div",nil,nil,nil,"display: flex;margin-top: 10px")local yc=xc.addChild("div",nil,nil,nil,"display: flex;margin-top: 10px")local zc=yc.addChild("div",nil,nil,nil,"display: flex; flex-grow: 1; justify-content: center")local Ac=zc.addChild("div",nil,nil,nil,"color: white")Ac.addChild("hr",nil,nil,nil,"border: color; margin: 5px;")Ac.addChild("div",ac,nil,nil,"color: white; font-size: 1.2em; font-weight: bold; padding-bottom:5px; line-height: 1.4em")Ac.addChild("div",wc,nil,nil,"color: white; font-weight: bold; padding-top:5px")local Bc=xc.build()return rpg.smf.save(xb,yb,zb,Bc,"wfrp4")end function S(ab,bb)local cb={}ab=string.lower(ab)cb["player"]="Player"cb["name"]="Name"cb["nom"]="b2_l1_f1i"cb["art"]="b12_l2_f5i"cb["athlétisme"]="b12_l3_f5i"cb["calme"]="b12_l4_f5i"cb["charme"]="b12_l5_f5i"cb["chevaucher"]="b12_l6_f5i"cb["corps à corps (base)"]="b12_l7_f5i"cb["corps à corps"]="b12_l8_f5i"cb["commandement"]="b12_l9_f5i"cb["conduite d'attelage"]="b12_l10_f5i"cb["discrétion"]="b12_l11_f5i"cb["divertissement"]="b12_l12_f5i"cb["emprise sur les animaux"]="b12_l13_f5i"cb["escalade"]="b12_l14_f5i"cb["esquive"]="b13_l2_f5i"cb["intimidation"]="b13_l3_f5i"cb["intuition"]="b13_l4_f5i"cb["marchandage"]="b13_l5_f5i"cb["orientation"]="b13_l6_f5i"cb["pari"]="b13_l7_f5i"cb["perception"]="b13_l8_f5i"cb["ragot"]="b13_l9_f5i"cb["ramer"]="b13_l10_f5i"cb["résistance"]="b13_l11_f5i"cb["résistance à l'alcool"]="b13_l12_f5i"cb["subornation"]="b13_l13_f5i"cb["survie en extérieur"]="b13_l14_f5i"for eb=2,14,1 do if(rpg.character.getfield(bb, string.format("b14_l%d_f1i", eb)) ~= "" and rpg.character.getfield(bb, string.format("b14_l%d_f1i", eb)) ~= nil and rpg.character.getfield(bb, string.format("b14_l%d_f1i", eb)) ~= "NULL" and type(rpg.character.getfield(bb, string.format("b14_l%d_f1i", eb))) ~= "table"and true)then local fb=string.lower(rpg.character.getfield(bb,string.format("b14_l%d_f1i",eb)))cb[fb]=string.format("b14_l%d_f5i",eb)end end local db=cb[ab]return db end function T(ab)local bb={}bb["idPersonnage"]=string.match(ab,".*ID%((%d-)%).*")bb["competence"]=string.match(ab,".*Competence%((.-)%)%s.*")bb["difficulte"]=string.match(ab,".*Difficulté%((.-)%).*")return bb end function rpg.accel.ask(ab)return U(ab,"ask")end function rpg.accel.test(ab)return U(ab,"run")end function V(ab,bb)print(ab,bb)end function y(ab)print("GetExternalString:cle:",ab)ab=tostring(ab)print("GetExternalString:cle:",ab)for bb=2,500,1 do local cb=rpg.character.getfield(g,string.format("b1_l%d_f1i",bb))local db=rpg.character.getfield(g,string.format("b1_l%d_f2i",bb))if(cb ~= "" and cb ~= nil and ab == cb)then print("GetExternalString:currentValue:",db)return db end end print("GetExternalString:vide")return""end function A(ab)local bb for cb=2,31,1 do local db=rpg.character.getfield(g,string.format("b2_l%d_f1i",cb))local eb=rpg.character.getfield(g,string.format("b2_l%d_f2t",cb))if(db ~= "" and db ~= nil and ab == db)then if _VERSION=="Lua 5.1"then bb,W=loadstring(eb)elseif _VERSION == "Lua 5.2" or _VERSION == "Lua 5.3"or _VERSION == "Lua 5.4"then bb,W=load(eb)end if bb then return bb else print("Compilation error:",W)end return eb end end return false end function X(ab,bb)print("armeHasAtoutDefaut:arme,atoutDefaut",arme,bb)local cb=string.lower(ab)bb=string.lower(bb)if(cb == nil or cb == '')then print("armeHasAtoutDefaut:nil ou vide")return false elseif string.find(cb,bb)then print("armeHasAtoutDefaut:"..bb .. "trouvé")return true end print("armeHasAtoutDefaut:"..bb .. "pas trouvé")return false end function U(ab,bb)local cb=ab local db local eb={["simple"]="Simple",["spectaculaire"]="Spectaculaire",["oppose"]="Opposé",["corps-a-corps"]="Corps à Corps",["distance"]="Combat à distance"}local fb,gb=string.match(ab,"^([%w%p]*)[%s*](.*)$")if fb == "simple"or fb == "spectaculaire"then gb=string.match(gb,"^.*(ID.*)%s*/?.*$")elseif fb == "oppose" or fb == "corps-a-corps"or fb == "distance"then gb,db=string.match(gb,"^(.*)%s*/%s*(.*)$")end local hb,ib,jb,kb local lb="wfrp4"local mb=eb[fb]local nb={}table.insert(nb,T(gb))local ob=nb[1]["idPersonnage"]local pb=nb[1]["competence"]local qb=tonumber(rpg.character.getfield(ob,S(pb,ob)))local rb=nb[1]["difficulte"]local sb=o(rb)local tb=m(n(rb))local ub=rpg.character.getfield(ob,S("Nom",ob))local vb= qb+tb local wb=rpg.character.getfield(ob,S("Player",ob))if fb == "simple"or fb == "spectaculaire"then if bb=="ask"then local yb=Z("div",nil,nil,nil,"display: flex; color: white")local zb=yb.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; width: 100%")zb.addChild("span",string.format("[b]%s doit réaliser un Test %s[/b]",wb,mb),nil,nil,"font-size: 1.2em; font-weight: bold; text-align: center; padding-bottom: 10px")local Ab=zb.addChild("div",nil,nil,nil,"display: flex; width: 100%")local Bb=Ab.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; flex-grow: 1; align-items: center")Bb.addChild("div",ub,nil,nil,"display: flex; font-weight: bold")Bb.addChild("div", pb.." (" .. qb .. ")",nil,nil,"display: flex")Bb.addChild("div", "Difficulté "..o(rb) .. " (" .. p(rb) .. ")",nil,nil,"display: flex")Bb.addChild("div", "Seuil effectif : "..vb,nil,nil,"display: flex; font-weight: bold")hb=yb.build()local Cb=Z(nil,string.format(":test %s:",cb),nil,nil,nil)ib=""kb=Cb.build()elseif bb=="run"then local yb,zb=rpg.roll.dice(1,0,9)[1],rpg.roll.dice(1,0,9)[1]return O(fb,ub,pb,qb,vb,rb,tb,yb,zb)end elseif fb == "oppose" or fb == "corps-a-corps"or fb == "distance"then table.insert(nb,T(db))local yb=nb[2]["idPersonnage"]local zb=nb[2]["competence"]local Ab=tonumber(rpg.character.getfield(yb,S(zb,yb)))local Bb=nb[2]["difficulte"]local Cb=o(Bb)local Db=m(n(Bb))local Eb=rpg.character.getfield(yb,S("Nom",yb))local Fb= Ab+Db local Gb=rpg.character.getfield(yb,S("Player",yb))if bb=="ask"then if fb == "oppose"or fb == "corps-a-corps"then local Hb=Z("div",nil,nil,nil,"display: flex; color: white")local Ib=Hb.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; width: 100%")Ib.addChild("span",string.format("[b]Votre Vénéré MJ demande un Test de %s[/b]",mb),nil,nil,"font-size: 1.2em; font-weight: bold; text-align: center; padding-bottom: 10px")local Jb=Ib.addChild("div",nil,nil,nil,"display: flex; width: 100%")local Kb=Jb.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; flex-grow: 1; align-items: center")Kb.addChild("div",ub,nil,nil,"display: flex; font-weight: bold")Kb.addChild("div", pb.." (" .. qb .. ")",nil,nil,"display: flex")Kb.addChild("div",  "Difficulté "..o(rb) ..  " (" .. p(rb) .. ")",nil,nil,"display: flex")Kb.addChild("div", "Seuil effectif : "..vb,nil,nil,"display: flex")Jb.addChild("hr",nil,nil,nil,"border: color; margin: 5px; width: 2px")local Lb=Jb.addChild("div",nil,nil,nil,"display: flex; flex-direction: column; flex-grow: 1; align-items: center")Lb.addChild("div",Eb,nil,nil,"display: flex; font-weight: bold")Lb.addChild("div", zb.." (" .. Ab .. ")",nil,nil,"display: flex")Lb.addChild("div",  "Difficulté "..o(Bb) ..  " (" .. p(Bb) .. ")",nil,nil,"display: flex")Lb.addChild("div", "Seuil effectif : "..Fb,nil,nil,"display: flex")hb=Hb.build()local Mb=Z(nil,string.format(":test %s:",cb),nil,nil,nil)ib=""kb=Mb.build()elseif fb=="distance"then print("ask distance")end elseif bb=="run"then local Hb,Ib,Jb,Kb=rpg.roll.dice(1,0,9)[1],rpg.roll.dice(1,0,9)[1],rpg.roll.dice(1,0,9)[1],rpg.roll.dice(1,0,9)[1]local Lb,Mb=j(i(Hb,Ib),qb),j(i(Jb,Kb),Ab)local Nb,Ob=k(i(Hb,Ib),vb),k(i(Jb,Kb),Fb)local Pb,Qb=l(fb,Hb,Ib),l(fb,Jb,Kb)if fb=="oppose"then return P(ub,pb,qb,vb,rb,Hb,Ib,Eb,zb,Ab,Fb,Bb,Jb,Kb)elseif fb=="corps-a-corps"then local Rb,Sb=L(ob),L(yb)vb= vb+(Rb * 10)Fb= Fb+(Sb * 10)local Tb=M(ob)local Ub=N(yb)local Vb,Wb=I(ob)local Xb,Yb=I(yb)return R({ub,pb,qb,vb,rb,Rb,Hb,Ib,Tb,Vb,Wb,Eb,zb,Ab,Fb,Bb,Sb,Jb,Kb,Ub,Xb,Yb})end end else return end local xb="[br/]Commande à copier dans un message :"return rpg.smf.save(hb,ib,xb,kb,lb)end